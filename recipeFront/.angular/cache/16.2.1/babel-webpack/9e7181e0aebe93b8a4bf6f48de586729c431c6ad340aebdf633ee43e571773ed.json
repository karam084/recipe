{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/dialog\";\nimport * as i2 from \"@angular/material/button\";\nconst _c0 = [\"popupFormTemplate\"];\nfunction AddEditComponent_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"h2\", 2);\n    i0.ɵɵtext(1, \"Popup Form\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"mat-dialog-content\")(3, \"form\")(4, \"mat-form-field\")(5, \"input\", 3);\n    i0.ɵɵlistener(\"ngModelChange\", function AddEditComponent_ng_template_2_Template_input_ngModelChange_5_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.name = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"mat-form-field\")(7, \"input\", 4);\n    i0.ɵɵlistener(\"ngModelChange\", function AddEditComponent_ng_template_2_Template_input_ngModelChange_7_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.email = $event);\n    });\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementStart(8, \"mat-dialog-actions\")(9, \"button\", 0);\n    i0.ɵɵlistener(\"click\", function AddEditComponent_ng_template_2_Template_button_click_9_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.closeDialog());\n    });\n    i0.ɵɵtext(10, \"Cancel\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"button\", 0);\n    i0.ɵɵlistener(\"click\", function AddEditComponent_ng_template_2_Template_button_click_11_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.submitForm());\n    });\n    i0.ɵɵtext(12, \"Submit\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngModel\", ctx_r1.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngModel\", ctx_r1.email);\n  }\n}\nexport class AddEditComponent {\n  constructor(dialog) {\n    this.dialog = dialog;\n  }\n  openDialog() {\n    const dialogRef = this.dialog.open(this.popupFormTemplate, {\n      width: '400px'\n    });\n    this.popupFormTemplate = null;\n    dialogRef.afterClosed().subscribe(result => {\n      // Handle dialog close if needed\n    });\n  }\n  addedit(addedit, arg1) {\n    throw new Error('Method not implemented.');\n  }\n  closeDialog() {\n    this.dialog.closeAll();\n  }\n  submitForm() {\n    // Handle form submission here\n    // You can access the form values via this.name and this.email\n    this.closeDialog();\n  }\n}\n_class = AddEditComponent;\n_class.ɵfac = function AddEditComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.MatDialog));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-add-edit\"]],\n  viewQuery: function AddEditComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.popupFormTemplate = _t.first);\n    }\n  },\n  decls: 4,\n  vars: 0,\n  consts: [[\"mat-button\", \"\", 3, \"click\"], [\"popupFormTemplate\", \"\"], [\"mat-dialog-title\", \"\"], [\"matInput\", \"\", \"placeholder\", \"Name\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"matInput\", \"\", \"placeholder\", \"Email\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"]],\n  template: function AddEditComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"button\", 0);\n      i0.ɵɵlistener(\"click\", function AddEditComponent_Template_button_click_0_listener() {\n        return ctx.openDialog();\n      });\n      i0.ɵɵtext(1, \"Open Popup Form\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(2, AddEditComponent_ng_template_2_Template, 13, 2, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor);\n    }\n  },\n  dependencies: [i1.MatDialogTitle, i1.MatDialogContent, i1.MatDialogActions, i2.MatButton],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","AddEditComponent_ng_template_2_Template_input_ngModelChange_5_listener","$event","ɵɵrestoreView","_r3","ctx_r2","ɵɵnextContext","ɵɵresetView","name","AddEditComponent_ng_template_2_Template_input_ngModelChange_7_listener","ctx_r4","email","AddEditComponent_ng_template_2_Template_button_click_9_listener","ctx_r5","closeDialog","AddEditComponent_ng_template_2_Template_button_click_11_listener","ctx_r6","submitForm","ɵɵadvance","ɵɵproperty","ctx_r1","AddEditComponent","constructor","dialog","openDialog","dialogRef","open","popupFormTemplate","width","afterClosed","subscribe","result","addedit","arg1","Error","closeAll","ɵɵdirectiveInject","i1","MatDialog","selectors","viewQuery","AddEditComponent_Query","rf","ctx","AddEditComponent_Template_button_click_0_listener","ɵɵtemplate","AddEditComponent_ng_template_2_Template","ɵɵtemplateRefExtractor"],"sources":["C:\\Users\\A H M E D\\Documents\\GitHub\\recipe\\recipeFront\\src\\app\\Components\\add-edit\\add-edit.component.ts","C:\\Users\\A H M E D\\Documents\\GitHub\\recipe\\recipeFront\\src\\app\\Components\\add-edit\\add-edit.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { TemplateRef, ViewChild } from '@angular/core';\n\n@Component({\n  selector: 'app-add-edit',\n  templateUrl: './add-edit.component.html',\n  styleUrls: ['./add-edit.component.css']\n})\nexport class AddEditComponent {\n  name: any;\n  email: any;\n  @ViewChild('popupFormTemplate') popupFormTemplate!: TemplateRef<any>;\n  constructor(public dialog: MatDialog){}\n  openDialog(): void {\n    const dialogRef = this.dialog.open(this.popupFormTemplate, {\n      width: '400px',\n    });\n    this.popupFormTemplate = null\n\n    dialogRef.afterClosed().subscribe(result => {\n      // Handle dialog close if needed\n    });\n  }\n  addedit(addedit: any, arg1: { width: string; }) {\n    throw new Error('Method not implemented.');\n  }\n\n  closeDialog(): void {\n    this.dialog.closeAll();\n  }\n\n  submitForm(): void {\n    // Handle form submission here\n    // You can access the form values via this.name and this.email\n    this.closeDialog();\n  }\n}\n","\n<button mat-button (click)=\"openDialog()\">Open Popup Form</button>\n<ng-template #popupFormTemplate>\n  <h2 mat-dialog-title>Popup Form</h2>\n  <mat-dialog-content>\n    <form>\n      <mat-form-field>\n        <input matInput placeholder=\"Name\" [(ngModel)]=\"name\" required>\n      </mat-form-field>\n      <mat-form-field>\n        <input matInput placeholder=\"Email\" [(ngModel)]=\"email\" required>\n      </mat-form-field>\n    </form>\n  </mat-dialog-content>\n  <mat-dialog-actions>\n    <button mat-button (click)=\"closeDialog()\">Cancel</button>\n    <button mat-button (click)=\"submitForm()\">Submit</button>\n  </mat-dialog-actions>\n</ng-template>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}